version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: smartrail_postgres
    environment:
      POSTGRES_DB: smartrail_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - smartrail_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: smartrail_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smartrail_network
    restart: unless-stopped

  # Backend API Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: smartrail_server
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=smartrail_db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ML_SERVICE_URL=http://ml:8000
      - CLIENT_URL=http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - smartrail_network
    restart: unless-stopped

  # ML Service
  ml:
    build:
      context: ./ml
      dockerfile: Dockerfile
    container_name: smartrail_ml
    environment:
      - FLASK_ENV=production
      - ML_SERVICE_PORT=8000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=smartrail_db
      - DB_USER=postgres
      - DB_PASSWORD=password
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - ./ml/models:/app/models
      - ./ml/data:/app/data
    networks:
      - smartrail_network
    restart: unless-stopped

  # Frontend (React App)
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: smartrail_client
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - REACT_APP_SOCKET_URL=http://localhost:5000
    ports:
      - "3000:80"
    depends_on:
      - server
    networks:
      - smartrail_network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: smartrail_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - client
      - server
    networks:
      - smartrail_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  smartrail_network:
    driver: bridge
